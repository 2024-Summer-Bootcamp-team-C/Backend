# compose 파일 버전

version: '3'

services:
    backend:
        build:
            context: ./
            dockerfile: Dockerfile
        container_name: backend
        volumes:
            - .:/backend
        command: sh -c "sleep 10 &&
                python manage.py makemigrations &&
                python manage.py migrate && 
                python manage.py runserver 0.0.0.0:8000"
        restart: on-failure
        ports:
            - 8000:8000
        depends_on:
            - redis
            - rabbitmq
        expose:
            - 8000

    redis:
        image: redis
        container_name: redis
        ports:
            - "6379:6379"

    rabbitmq:
        image: "rabbitmq:3-management"
        container_name: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            RABBITMQ_DEFAULT_USER: user
            RABBITMQ_DEFAULT_PASS: password

    celery:
        build:
            context: ./
            dockerfile: Dockerfile
        container_name: celery
        command: celery -A backend worker -l info
        volumes:
            - .:/backend
        depends_on:
            - backend
            - rabbitmq
            - redis

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        volumes:
            - ./prometheus:/etc/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
            - "9090:9090"
        depends_on:
            - backend

    grafana:
        image: grafana/grafana
        container_name: grafana
        ports:
            - "3060:3000"
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=admin
        volumes:
            - grafana-data:/var/lib/grafana
            - ./grafana/provisioning:/etc/grafana/provisioning
        depends_on:
            - prometheus

    nodeexporter:
        image: prom/node-exporter:latest
        container_name: node-exporter
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - "--path.procfs=/host/proc"
            - "--path.sysfs=/host/sys"
            - "--path.rootfs=/host"
            - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
        pid: host
        ports:
          - 9100:9100

    cadvisor:
        image: gcr.io/cadvisor/cadvisor
        container_name: cadvisor
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /dev/disk/:/dev/disk:ro
        command:
            - --docker_only
        ports:
            - 8080:8080

volumes:
    grafana-data: